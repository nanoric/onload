# SPDX-License-Identifier: GPL-2.0
# X-SPDX-Copyright-Text: (c) Copyright 2012-2019 Xilinx, Inc.

%define pkgversion

Name:		openonload-dkms
Version:	%(echo '%{pkgversion}' | sed 's/-/_/g')
Release:	1%{?dist}%{?setuid:SETUID}%{?debug:DEBUG}
Epoch:		0

Summary:	OpenOnload kernel-driver

Group:		System Environment/Kernel
Vendor:		Xilinx, Inc.
License:	Various
URL:		http://www.openonload.org/

BuildArch:	noarch
Requires:	dkms >= 2.00
Requires:	binutils, gcc, make
Source0:	openonload-%{pkgversion}.dkms.tar.gz
Provides:	openonload = %{version}-%{release}
BuildRoot:	%{_tmppath}/openonload-%{pkgversion}}-root-%(%{__id_u} -n)/

%description
The Linux kernel driver for OpenOnload.

This is a DKMS (Dynamic Kernel Module System) package and requires
dkms to be installed.

%prep
rm -rf openonload-dkms-%{pkgversion}
mkdir openonload-dkms-%{pkgversion}
cp "$RPM_SOURCE_DIR"/openonload-%{pkgversion}.dkms.tar.gz openonload-dkms-%{pkgversion}/
cd openonload-dkms-%{pkgversion} && tar xzf openonload-%{pkgversion}.dkms.tar.gz ./dkms_source_tree

%install
if [ "$RPM_BUILD_ROOT" != "/" ]; then
	rm -rf "$RPM_BUILD_ROOT"
fi
mkdir -p "$RPM_BUILD_ROOT"/usr/src/openonload-dkms-%{pkgversion}
cp openonload-dkms-%{pkgversion}/openonload-%{pkgversion}.dkms.tar.gz \
	"$RPM_BUILD_ROOT"/usr/src/openonload-dkms-%{pkgversion}/
mkdir -p "$RPM_BUILD_ROOT"/usr/share/doc/openonload-dkms-%{pkgversion}
for doc in LICENSE* README; do
	cp openonload-dkms-%{pkgversion}/dkms_source_tree/$doc \
		"$RPM_BUILD_ROOT"/usr/share/doc/openonload-dkms-%{pkgversion}/
done

%clean
if [ "$RPM_BUILD_ROOT" != "/" ]; then
	rm -rf "$RPM_BUILD_ROOT"
fi
rm -rf openonload-dkms-%{pkgversion}

%files
%defattr(-,root,root)
/usr/src/openonload-dkms-%{pkgversion}/
/usr/share/doc/openonload-dkms-%{pkgversion}/

%pre

%post
dkms ldtarball --archive /usr/src/openonload-dkms-%{pkgversion}/openonload-%{pkgversion}.dkms.tar.gz

if ! uname -r | grep -q "BOOT" && [ -e /lib/modules/`uname -r`/build/include ]; then
	dkms build -m openonload -v %{pkgversion}
	dkms install -m openonload -v %{pkgversion} --force

elif uname -r | grep -q "BOOT"; then
        echo -e ""
        echo -e "Module build for the currently running kernel was skipped since you"
        echo -e "are running a BOOT variant of the kernel."
else
        echo -e ""
        echo -e "Module build for the currently running kernel was skipped since the"
        echo -e "kernel source for this kernel does not seem to be installed."
fi

exit 0

%preun
echo -e
echo -e "Uninstall of openonload module (version %{pkgversion}) beginning:"
dkms remove -m openonload -v %{pkgversion} --all --rpm_safe_upgrade
onload_uninstall
exit 0
